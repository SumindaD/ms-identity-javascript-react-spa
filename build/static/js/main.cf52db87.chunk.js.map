{"version":3,"sources":["authConfig.js","components/SignInButton.jsx","components/SignOutButton.jsx","components/PageLayout.jsx","components/APIData.jsx","App.jsx","index.js"],"names":["msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","SignInButton","instance","useMsal","handleLogin","loginType","loginPopup","catch","e","log","loginRedirect","DropdownButton","variant","className","drop","title","Dropdown","Item","as","onClick","SignOutButton","handleLogout","logoutType","logoutPopup","postLogoutRedirectUri","mainWindowRedirectUri","logoutRedirect","PageLayout","props","isAuthenticated","useIsAuthenticated","Navbar","bg","href","children","APIData","apiData","AppContent","accounts","useState","setApiData","name","Button","acquireTokenSilent","account","then","response","accessToken","fetch","method","headers","Headers","data","json","MainContent","interactionType","InteractionType","Redirect","authenticationRequest","App","msalInstance","PublicClientApplication","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf52db87.chunk.js","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\nexport const msalConfig = {\n    auth: {\n        clientId: \"307bbee6-7a99-454d-a735-22804545e708\",\n        authority: \"https://login.microsoftonline.com/4174607d-7d0b-41f5-bc2c-24de24c56605\", // This is a URL (e.g. https://login.microsoftonline.com/{your tenant ID})\n        redirectUri: \"https://sumindareactjs.azurewebsites.net/\"\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    },\n    system: {\t\n        loggerOptions: {\t\n            loggerCallback: (level, message, containsPii) => {\t\n                if (containsPii) {\t\t\n                    return;\t\t\n                }\t\t\n                switch (level) {\t\t\n                    case LogLevel.Error:\t\t\n                        console.error(message);\t\t\n                        return;\t\t\n                    case LogLevel.Info:\t\t\n                        console.info(message);\t\t\n                        return;\t\t\n                    case LogLevel.Verbose:\t\t\n                        console.debug(message);\t\t\n                        return;\t\t\n                    case LogLevel.Warning:\t\t\n                        console.warn(message);\t\t\n                        return;\t\t\n                }\t\n            }\t\n        }\t\n    }\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequest = {\n    scopes: [\"api://a62ecf7b-71ef-4580-9cb4-f496b66cfe6c/Invoke\"]\n};","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"../authConfig\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\n\n/**\n * Renders a drop down button with child buttons for logging in with a popup or redirect\n */\nexport const SignInButton = () => {\n    const { instance } = useMsal();\n\n    const handleLogin = (loginType) => {\n        if (loginType === \"popup\") {\n            instance.loginPopup(loginRequest).catch(e => {\n                console.log(e);\n            });\n        } else if (loginType === \"redirect\") {\n            instance.loginRedirect(loginRequest).catch(e => {\n                console.log(e);\n            });\n        }\n    }\n    return (\n        <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"Sign In\">\n            <Dropdown.Item as=\"button\" onClick={() => handleLogin(\"popup\")}>Sign in using Popup</Dropdown.Item>\n            <Dropdown.Item as=\"button\" onClick={() => handleLogin(\"redirect\")}>Sign in using Redirect</Dropdown.Item>\n        </DropdownButton>\n    )\n}","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\n\n/**\n * Renders a sign-out button\n */\nexport const SignOutButton = () => {\n    const { instance } = useMsal();\n\n    const handleLogout = (logoutType) => {\n        if (logoutType === \"popup\") {\n            instance.logoutPopup({\n                postLogoutRedirectUri: \"/\",\n                mainWindowRedirectUri: \"/\"\n            });\n        } else if (logoutType === \"redirect\") {\n            instance.logoutRedirect({\n                postLogoutRedirectUri: \"/\",\n            });\n        }\n    }\n    return (\n        <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"Sign Out\">\n            <Dropdown.Item as=\"button\" onClick={() => handleLogout(\"popup\")}>Sign out using Popup</Dropdown.Item>\n            <Dropdown.Item as=\"button\" onClick={() => handleLogout(\"redirect\")}>Sign out using Redirect</Dropdown.Item>\n        </DropdownButton>\n    )\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nimport { useIsAuthenticated } from \"@azure/msal-react\";\nimport { SignInButton } from \"./SignInButton\";\nimport { SignOutButton } from \"./SignOutButton\";\n\n/**\n * Renders the navbar component with a sign-in or sign-out button depending on whether or not a user is authenticated\n * @param props \n */\nexport const PageLayout = (props) => {\n    const isAuthenticated = useIsAuthenticated();\n\n    return (\n        <>\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <a className=\"navbar-brand\" href=\"/\">Microsoft Identity Platform</a>\n                { isAuthenticated ? <SignOutButton /> : <SignInButton /> }\n            </Navbar>\n            <h5><center>Welcome to the Microsoft Authentication Library For Javascript - React Quickstart</center></h5>\n            <br />\n            <br />\n            {props.children}\n        </>\n    );\n};\n","import React from \"react\";\n\n/**\n * Renders data retrieved from API\n * @param props \n */\nexport const APIData = (props) => {\n\n    return (\n        <div>\n            <p><strong>API Returned: </strong> {props.apiData}</p>\n        </div>\n    );\n};","import React, { useState } from \"react\";\nimport { useMsal, MsalAuthenticationTemplate } from \"@azure/msal-react\";\nimport { InteractionType } from \"@azure/msal-browser\";\nimport { loginRequest } from \"./authConfig\";\nimport { PageLayout } from \"./components/PageLayout\";\nimport { APIData } from \"./components/APIData\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./styles/App.css\";\n\n/**\n * Renders name of the signed-in user and a button to retrieve data from an API\n */\nconst AppContent = () => {\n    \n    const { instance, accounts } = useMsal();\n    const [apiData, setApiData] = useState(null);\n\n    function CallAPI() {\n        // Silently acquires an access token which is then attached to a request for API call\n        instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n        }).then((response) => {\n            console.log(response.accessToken);\n\n            fetch('https://sumindatest.azurewebsites.net/api/HttpTrigger', { \n                method: 'post', \n                headers: new Headers({\n                    'Authorization': 'Bearer ' + response.accessToken,\n                    'Accept': 'application/json'\n                })\n            })\n            .then(data => data.json())\n            .then(json => {\n                console.log(json);\n                setApiData(json);\n            });\n\n\n        });\n    }\n\n    return (\n        <>\n            <h5 className=\"card-title\">Welcome {accounts[0].name}</h5>\n            {\n                apiData ? \n                <APIData apiData={apiData} />\n                :\n                <div>No Data from API. Click Call API!<br/><br/></div>\n            }\n            <Button variant=\"secondary\" onClick={CallAPI}>Call API</Button>\n        </>\n    );\n};\n\n/**\n * If a user is authenticated the AppContent component above is rendered. Otherwise the content is not rendered.\n */\nconst MainContent = () => { \n    return (\n        <div className=\"App\">\n            {\n                <MsalAuthenticationTemplate  interactionType={InteractionType.Redirect} authenticationRequest={loginRequest}>\n                    <AppContent />\n                </MsalAuthenticationTemplate>\n            }\n        </div>\n    );\n};\n\nexport default function App() {\n    return (\n        <PageLayout>\n            <MainContent />\n        </PageLayout>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/index.css\";\nimport App from \"./App.jsx\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\n\n/**\n * Initialize a PublicClientApplication instance which is provided to the MsalProvider component\n * We recommend initializing this outside of your root component to ensure it is not re-initialized on re-renders\n */\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n/**\n * We recommend wrapping most or all of your components in the MsalProvider component. It's best to render the MsalProvider as close to the root as possible.\n */\nReactDOM.render(\n    <React.StrictMode>\n        <MsalProvider instance={msalInstance}>\n            <App />\n        </MsalProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}